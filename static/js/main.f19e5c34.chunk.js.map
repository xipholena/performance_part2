{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Page1","lazy","Page2","Page3","App","onRouteChange","route","setState","console","log","Router","Route","Switch","fallback","exact","path","component","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAKMA,EAAQC,gBAAK,kBAAM,gCACnBC,EAAQD,gBAAK,kBAAM,gCACnBE,EAAQF,gBAAK,kBAAM,gCA2BVG,E,4MAxBXC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAACD,MAAMA,K,4CAGzB,WAEI,OADAE,QAAQC,IAAIC,IAAQC,IAAOC,IAAQX,QAE/B,8BACK,cAAC,IAAD,UACG,cAAC,WAAD,CAAUY,SAAU,6CAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhB,IACjC,cAAC,IAAD,CAAOe,KAAK,SAASC,UAAWd,IAChC,cAAC,IAAD,CAAOa,KAAK,SAASC,UAAWb,iB,GAf1Cc,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f19e5c34.chunk.js","sourcesContent":["import React, {Component, Suspense, lazy} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport './App.css';\n\n\nconst Page1 = lazy(() => import('./components/Page1'));\nconst Page2 = lazy(() => import('./components/Page2'));\nconst Page3 = lazy(() => import('./components/Page3'));\nclass App extends Component {\n\n    onRouteChange = (route) => {\n        this.setState({route:route})\n    }\n\n    render() {\n        console.log(Router, Route, Switch, lazy)\n        return (\n            <div>\n                 <Router>\n                    <Suspense fallback={<div>Loading...</div>}>\n                        <Switch>\n                            <Route exact path=\"/\" component={Page1}/>\n                            <Route path=\"/page2\" component={Page2}/>\n                            <Route path=\"/page3\" component={Page3}/>\n                        </Switch>\n                    </Suspense>\n                </Router>\n            </div>\n\n        )\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}